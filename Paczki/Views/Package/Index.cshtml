@model IndexPackageContentsModelView
@{
    int numPackages = Model.NumOfAllPackages;
    int pageSize = Model.NumPackagesOnPage;
    ViewData["Title"] = "Index";
    var numPages = Math.Ceiling((double)numPackages / pageSize);
    var currPage = Model.PageChoice;
    var maxID = getMaxId();

}

@functions {
    int getMaxId()
    {
        var maxId = Model.Query.MaxBy(item => item.PackageId);
        if (maxId is null)
        {
            return 0;
        }
        return (int)maxId.PackageId;
    }
}


@if (TempData["edit_operation"] != null)
{
    <h2>@TempData["edit_operation"]</h2>
}

<h1>Okno główne – lista paczek</h1>

@using(Html.BeginForm()){
@*    <input class="page-choice-input" name="pageChoice" type="hidden" value=@currPage />*@
@*    <input class="form-check-input show-opened-input" type="checkbox" value="true" id="ShowOpenCheck" name="ShowOpen" checked>*@
    @Html.LabelFor(model => model.ShowOpen,"pokazuj otwarte [TAK/NIE] ")
    @Html.RadioButtonFor(model => model.ShowOpen,true)
    @Html.RadioButtonFor(model => model.ShowOpen,false)
    <br/>
    @Html.LabelFor(model => model.ShowClosed,"pokazuj zamkniete [TAK/NIE] ")
    @Html.RadioButtonFor(model => model.ShowClosed,true)
    @Html.RadioButtonFor(model => model.ShowClosed,false)
    <br />

@*    <label class="form-check-label" for="ShowOpenCheck">
        Pokazuj otwarte
    </label>*@
@*    <br />
    <input class="form-check-input show-closed-input" type="checkbox" value="true" id="ShowClosedCheck" name="ShowClosed" checked>
    <label class="form-check-label" for="ShowClosedCheck">
        Pokazuj zamknięte
    </label>
    <br/>*@
    <div class="p-2">
        <button class="btn btn-primary float-start" style="width:150px" formmethod="get" asp-action="FilterPackages" >Filtruj</button>
        <button class="btn btn-secondary float-end" style="width:300px" formmethod="post" asp-action="HandleEditPackages">Zatwierdź wszystkie zmiany</button>
        <br />
    </div>
    <br/><br/>
    <table id="packages-table" class="table table-bordered table-striped" style="width:100%">

        <thead>
            <tr>
                <th>Nazwa paczki</th>
                <th>Data utworzenia</th>
                <th>Data zamknięcia</th>
                <th>Czy otwarta?</th>
                <th>Miasto docelowe</th>
                <th></th>
                <th></th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var package in Model.Query)
            {
                <tr>
                    <td width="20%">
                        @package.Name
                    </td>
                    <td width="20%">
                        @package.CreationDateTime
                    </td>
                    <td width="20%">
                        @package.ClosedDateTime
                    </td>
                    <td width="5%" class="openedInfo">
                        @package.Opened
                    </td>
                    <td width="10%">
                        @package.DestinationCity
                        </td>
                    <td width="5%">
                        <div class="w-75 btn-group" role="group">
                            <a asp-controller="Package" class="edit-button" asp-action="Edit" asp-route-id="@package.PackageId">Edytuj</a>
                        </div>
                    </td>
                    <td width="5%">
                        <div class="w-75 btn-group" role="group">
                            <a asp-controller="Package" class="open-button" asp-action="Open" asp-route-id="@package.PackageId">Otwórz</a>
                        </div>
                    </td>
                    <td width="5%">
                        <div class="w-75 btn-group" role="group">
                            <a asp-controller="Package" class="close-button" asp-action="Close" asp-route-id="@package.PackageId">Zamknij</a>
                        </div>
                    </td>
                    <td width="5%">
                        <div class="w-75 btn-group" role="group">
                            <a asp-controller="Package" asp-action="Delete" asp-route-id="@package.PackageId">Usuń</a>
                        </div>
                    </td>
                </tr>
            }
        </tbody>
    </table>


@*    <form method="post">*@
@*        <input class="form-control" type="text" name="packageName" placeholder="Tu wpisz nazwę nowej paczki" />*@
@*        <button class="btn btn-secondary" style="width:150px" type="submit" asp-action="CreatePackage">
            Dodaj nową paczkę
        </button>*@
@*    </form>*@
@*    <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#add-new-package-modal">Dodaj nową paczkę</button>*@

    <!-- Modal -->
    <div class="modal" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">Utwórz przesyłkę</h5>
                </div>
                <div class="modal-body">
                    <div class="form-group">
@*                        <label for="newPackageName" class="col-form-label">Nazwa paczki:</label>
                        <input type="text" class="form-control" id="newPackageName">*@
                        @Html.LabelFor(model => model.NewPackageName,"Nazwa paczki:",new{style="width:150px"})
                        @Html.EditorFor(model => model.NewPackageName)
                    </div>
                    <div class="form-group">
@*                        <label for="newPackageCity" class="col-form-label">Miejscowość docelowa:</label>
                        <input type="text" class="form-control" id="newPackageCity">*@
                        @Html.LabelFor(model => model.NewPackageCity,"Miasto docelowe:",new{style="width:150px"})
                        @Html.EditorFor(model => model.NewPackageCity)
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Anuluj</button>
                    <button type="submit" formmethod="post" id="addPackageCandidate" asp-action="CreatePackage" class="btn btn-primary">Utwórz paczkę</button>
                </div>
            </div>
        </div>
    </div>
    <a href="#" type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#exampleModal">Dodaj nową paczkę</a>



    <p id="vertical-space"></p>
    <p id="vertical-space"></p>
    <p id="vertical-space"></p>
    <p id="vertical-space"></p>
    <p id="vertical-space"></p>
    <p id="vertical-space"></p>
    <p id="vertical-space"></p>
    <p id="vertical-space"></p>
    <p id="vertical-space"></p>
<div>
    @Html.LabelFor(model => model.PageChoice,"wybór strony")
    @Html.EditorFor(model => model.PageChoice, new {@class = "form-control page-choice-input", style="width:0.5cm", min="1"})
@*    <p id="vertical-space"></p>*@
@*        <input class="form-control page-choice-input" id="page-choice" name="pageChoice" type="number" value=@currPage style="width:2cm" />*@
@*        <button type="submit" style="cursor:pointer" class="btn btn-primary">zatwierdz</button>*@
    <br/><br/>
    <div class="btn-group" role="group">
        <button type="submit" formmethod="get" asp-action="TurnPage" class="btn btn-primary" style="cursor:pointer">zatwierdź stronę</button>
        <button type="button" class="btn btn-secondary" style="cursor:pointer" onclick="decreasePageChoice()" id="page-prev">poprzednia</button>
        <button type="button" class="btn btn-success" style="cursor:pointer" onclick="incrementPageChoice()" id="page-next">następna</button>
    </div>
@*        <input type="hidden" class="show-closed-input" value=@Model.ShowClosed.ToString() name="ShowClosed" checked>
    <input type="hidden" class="show-opened-input" value=@Model.ShowOpen.ToString() name="ShowOpen" checked>*@
</div>

}
<p>@pageSize przesylek na strone. @numPages stron do wyswietlenia.</p>

@section Scripts{
    <script type="text/javascript">
        class Package {
            constructor(name, city, tempID) {
                this.Name = name;
                this.City = city;
                this.TempId = tempID;
            }
        }
        var newPackages = [];    // Name: , DestinationCity:
        //var hiddenPackages = [];
        var hiddenIDCount = @(maxID + 1);
        const numToHide = 5;
        var hiddenEntities = 0;

        $(window).on('load', function () {
            $("#PageChoice").attr("min", 1);
            
        });
        $("#addPackageCandidate").on("click", function(){
            if(newPackages.length >= 5){
                alert("Nie można dodać więcej niż 5 paczek bez zapisywania.");
                return false;
            }
            var candidateName = $("#NewPackageName").val();
            var candidateCity = $("#NewPackageCity").val();
            newPackages.push(new Package(candidateName, candidateCity, hiddenIDCount));
            hiddenIDCount++;
            pushNewPackageToTable();
        });

        function appendNewRowToTable(){
            var newRow = newPackages.slice(-1);
            row = $(`<tr class='temp-package' id=${newRow.TempId}></tr>`);
            nameCol = $(`<td>${newRow.Name}</td>`);
            dateBornCol = $("<td><strong>teraz!</strong></td>");
            dateClosedCol = $("<td></td>");
            isOpenedCol = $("<td></td>");
            cityCol = $("<td></td>");
            editCol = $(String.raw`<td><a href="#" onclick="alertNotSaved()">Edytuj</a></td>`);
            openCol = $(String.raw`<td><a href="#" onclick="alertNotSaved()">Otwórz</a></td>`);
            closeCol = $(String.raw`<td><a href="#" onclick="alertNotSaved()">Zamknij</a></td>`);
            row.append(nameCol, dateBornCol, dateClosedCol, isOpenedCol, cityCol, editCol,openCol,closeCol).prependTo("#packages-table");
        }

        function alertNotSaved(){
            alert("Zapisz wszystko aby dokonywać operacji na paczkach")
        }

        function hideLastRowInTable(){
            hiddenEntities++;
            $(`#packages-table tr:nth-child(${numToHide})`).hide();
        }

        function unhideLastRowInTable(){
            $(`#packages-table tr:nth-child(${numToHide})`).show();
        }

        function pushNewPackageToTable(){
            var currNumOfRowsOnPage = @Model.Query.Count() + newPackages.length;
            if(currNumOfRowsOnPage > 5){
                hideLastRowInTable();
            }
            appendNewRowToTable();
        }
        
        function incrementPageChoice() {
            var currPageItem = parseInt($("#PageChoice").val());
            var numPages = @numPages;
            if (currPageItem < numPages) {
                $("#PageChoice").val(currPageItem + 1);
            }

        }
        function decreasePageChoice() {
            var currPageItem = parseInt($("#PageChoice").val());
            if (currPageItem > 1) {
                $("#PageChoice").val(currPageItem - 1);
            }
        }

        $(".show-opened-input").change(function(){
            var value = $(this).val();
            $(".show-opened-input").val(value);
        });
        $(".show-closed-input").change(function () {
            var value = $(this).val();
            $(".show-closed-input").val(value);
        });
        $(".page-choice-input").change(function () {
            var value = $(this).val();
            $(".show-closed-input").val(value);
        });


        $(document).delegate(".open-button","click",function(){
            var isOpened = $(this).closest("tr").find(".openedInfo").text();
            isOpened = isOpened.replace(/[^0-9A-Z]+/gi, "");
            //alert(isOpened);
            return (isOpened != 'True');
        });

        $(document).delegate(".close-button", "click", function () {
            var isOpened = $(this).closest("tr").find(".openedInfo").text();
            isOpened = isOpened.replace(/[^0-9A-Z]+/gi, "");
            //alert(isOpened);
            return (isOpened == 'True');
        });

        $(document).delegate(".edit-button", "click", function(){
            var isOpened = $(this).closest("tr").find(".openedInfo").text();
            isOpened = isOpened.replace(/[^0-9A-Z]+/gi, "");
            isOpened = (isOpened == 'True');
            if(!isOpened){
                alert("Nie można edytować zamkniętej paczki.");
                $(this).addClass('disabled');
                return false;
            }
            return true;
        });

    </script>
}